{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "MovieCSV",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "outputCSV",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "AggByYear",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "time"
				},
				{
					"name": "aggregate1"
				},
				{
					"name": "sort1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Poster_Link as string,",
				"          Series_Title as string,",
				"          Released_Year as string,",
				"          Certificate as string,",
				"          Runtime as string,",
				"          Genre as string,",
				"          IMDB_Rating as double,",
				"          Overview as string,",
				"          Meta_score as string,",
				"          Director as string,",
				"          Star1 as string,",
				"          Star2 as string,",
				"          Star3 as string,",
				"          Star4 as string,",
				"          No_of_Votes as string,",
				"          Gross as double,",
				"          FALSE as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 select(mapColumn(",
				"          Series_Title,",
				"          Released_Year,",
				"          Certificate,",
				"          Runtime,",
				"          Genre,",
				"          IMDB_Rating,",
				"          Overview,",
				"          Meta_score,",
				"          Director,",
				"          Star1,",
				"          Star2,",
				"          Star3,",
				"          Star4,",
				"          No_of_Votes,",
				"          Gross",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 derive(Runtime = dropRight(Runtime , 3)) ~> time",
				"time aggregate(groupBy(Released_Year),",
				"     movieCount = count(Series_Title),",
				"          maxDuration = max(Runtime),",
				"          minDuration = min(Runtime),",
				"          avgRating = avg(IMDB_Rating)) ~> aggregate1",
				"aggregate1 sort(desc(movieCount, true)) ~> sort1",
				"time sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['MoviesNew'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1",
				"sort1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['AggByYear'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink2"
			]
		}
	}
}